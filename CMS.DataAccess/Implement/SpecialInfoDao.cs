//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>SpecialInfoDao</c> is the implementation of <see cref="ISpecialInfoDao"/>.</summary>
    public partial class SpecialInfoDao : BaseDAO, ISpecialInfoDao {

		/// <summary>Implements <see cref="ISpecialInfoDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "SpecialInfo.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="ISpecialInfoDao.Find"/></summary>
		public SpecialInfo Find(Int64 iD) {
			String stmtId = "SpecialInfo.Find";
			SpecialInfo result = SqlMapperManager.Instance.QueryForObject<SpecialInfo>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="ISpecialInfoDao.FindAll"/></summary>
		public IList<SpecialInfo> FindAll() {
			String stmtId = "SpecialInfo.FindAll";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.QuickFindAll"/></summary>
		public IList<SpecialInfo> QuickFindAll() {
			String stmtId = "SpecialInfo.QuickFindAll";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByName"/></summary>
		public IList<SpecialInfo> FindByName(String name) {
			String stmtId = "SpecialInfo.FindByName";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByEnName"/></summary>
		public IList<SpecialInfo> FindByEnName(String enName) {
			String stmtId = "SpecialInfo.FindByEnName";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, enName);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByTemplateID"/></summary>
		public IList<SpecialInfo> FindByTemplateID(Int64 templateID) {
			String stmtId = "SpecialInfo.FindByTemplateID";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, templateID);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindBySmallPicUrl"/></summary>
		public IList<SpecialInfo> FindBySmallPicUrl(String smalllPicUrl) {
			String stmtId = "SpecialInfo.FindBySmallPicUrl";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, smalllPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByPicUrl"/></summary>
		public IList<SpecialInfo> FindByPicUrl(String picUrl) {
			String stmtId = "SpecialInfo.FindByPicUrl";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, picUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByKeyword"/></summary>
		public IList<SpecialInfo> FindByKeyword(String keyword) {
			String stmtId = "SpecialInfo.FindByKeyword";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, keyword);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByDescription"/></summary>
		public IList<SpecialInfo> FindByDescription(String description) {
			String stmtId = "SpecialInfo.FindByDescription";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, description);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindBySort"/></summary>
		public IList<SpecialInfo> FindBySort(Int32 sort) {
			String stmtId = "SpecialInfo.FindBySort";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, sort);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindBySpecialUrlPart"/></summary>
		public IList<SpecialInfo> FindBySpecialUrlPart(String specialUrlPart) {
			String stmtId = "SpecialInfo.FindBySpecialUrlPart";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, specialUrlPart);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.FindByCreateTime"/></summary>
		public IList<SpecialInfo> FindByCreateTime(DateTime createTime) {
			String stmtId = "SpecialInfo.FindByCreateTime";
			IList<SpecialInfo> result = SqlMapperManager.Instance.QueryForList<SpecialInfo>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.Insert"/></summary>
		public void Insert(SpecialInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "SpecialInfo.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.Update"/></summary>
		public void Update(SpecialInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "SpecialInfo.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.Delete"/></summary>
		public void Delete(SpecialInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "SpecialInfo.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByName"/></summary>
		public int DeleteByName(String name) {
			String stmtId = "SpecialInfo.DeleteByName";
			int result = SqlMapperManager.Instance.Delete(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByEnName"/></summary>
		public int DeleteByEnName(String enName) {
			String stmtId = "SpecialInfo.DeleteByEnName";
			int result = SqlMapperManager.Instance.Delete(stmtId, enName);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByTemplateID"/></summary>
		public int DeleteByTemplateID(Int64 templateID) {
			String stmtId = "SpecialInfo.DeleteByTemplateID";
			int result = SqlMapperManager.Instance.Delete(stmtId, templateID);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteBySmallPicUrl"/></summary>
		public int DeleteBySmallPicUrl(String smalllPicUrl) {
			String stmtId = "SpecialInfo.DeleteBySmallPicUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, smalllPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByPicUrl"/></summary>
		public int DeleteByPicUrl(String picUrl) {
			String stmtId = "SpecialInfo.DeleteByPicUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, picUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByKeyword"/></summary>
		public int DeleteByKeyword(String keyword) {
			String stmtId = "SpecialInfo.DeleteByKeyword";
			int result = SqlMapperManager.Instance.Delete(stmtId, keyword);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByDescription"/></summary>
		public int DeleteByDescription(String description) {
			String stmtId = "SpecialInfo.DeleteByDescription";
			int result = SqlMapperManager.Instance.Delete(stmtId, description);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteBySort"/></summary>
		public int DeleteBySort(Int32 sort) {
			String stmtId = "SpecialInfo.DeleteBySort";
			int result = SqlMapperManager.Instance.Delete(stmtId, sort);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteBySpecialUrlPart"/></summary>
		public int DeleteBySpecialUrlPart(String specialUrlPart) {
			String stmtId = "SpecialInfo.DeleteBySpecialUrlPart";
			int result = SqlMapperManager.Instance.Delete(stmtId, specialUrlPart);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "SpecialInfo.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ISpecialInfoDao.Reload"/></summary>
		public void Reload(SpecialInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "SpecialInfo.Find";
			SqlMapperManager.Instance.QueryForObject<SpecialInfo>(stmtId, obj, obj);
		}
		
	}

}
