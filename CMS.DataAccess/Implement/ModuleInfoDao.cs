//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>ModuleInfoDao</c> is the implementation of <see cref="IModuleInfoDao"/>.</summary>
    public partial class ModuleInfoDao : IModuleInfoDao {

		/// <summary>Implements <see cref="IModuleInfoDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "ModuleInfo.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IModuleInfoDao.Find"/></summary>
		public ModuleInfo Find(Int64 iD) {
			String stmtId = "ModuleInfo.Find";
			ModuleInfo result = SqlMapperManager.Instance.QueryForObject<ModuleInfo>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="IModuleInfoDao.FindAll"/></summary>
		public IList<ModuleInfo> FindAll() {
			String stmtId = "ModuleInfo.FindAll";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.QuickFindAll"/></summary>
		public IList<ModuleInfo> QuickFindAll() {
			String stmtId = "ModuleInfo.QuickFindAll";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByPID"/></summary>
		public IList<ModuleInfo> FindByPID(Int64 pID) {
			String stmtId = "ModuleInfo.FindByPID";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, pID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByModuleType"/></summary>
		public IList<ModuleInfo> FindByModuleType(Int16 moduleType) {
			String stmtId = "ModuleInfo.FindByModuleType";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, moduleType);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByModuleName"/></summary>
		public IList<ModuleInfo> FindByModuleName(String moduleName) {
			String stmtId = "ModuleInfo.FindByModuleName";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, moduleName);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByModuleUrl"/></summary>
		public IList<ModuleInfo> FindByModuleUrl(String moduleUrl) {
			String stmtId = "ModuleInfo.FindByModuleUrl";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, moduleUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByDescription"/></summary>
		public IList<ModuleInfo> FindByDescription(String description) {
			String stmtId = "ModuleInfo.FindByDescription";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, description);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByCreateUserID"/></summary>
		public IList<ModuleInfo> FindByCreateUserID(Int64 createUserID) {
			String stmtId = "ModuleInfo.FindByCreateUserID";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindBySortID"/></summary>
		public IList<ModuleInfo> FindBySortID(Int32 sortID) {
			String stmtId = "ModuleInfo.FindBySortID";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, sortID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByStatus"/></summary>
		public IList<ModuleInfo> FindByStatus(Int16 status) {
			String stmtId = "ModuleInfo.FindByStatus";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.FindByCreateTime"/></summary>
		public IList<ModuleInfo> FindByCreateTime(DateTime createTime) {
			String stmtId = "ModuleInfo.FindByCreateTime";
			IList<ModuleInfo> result = SqlMapperManager.Instance.QueryForList<ModuleInfo>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.Insert"/></summary>
		public void Insert(ModuleInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "ModuleInfo.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.Update"/></summary>
		public void Update(ModuleInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "ModuleInfo.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.Delete"/></summary>
		public void Delete(ModuleInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "ModuleInfo.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByPID"/></summary>
		public int DeleteByPID(Int64 pID) {
			String stmtId = "ModuleInfo.DeleteByPID";
			int result = SqlMapperManager.Instance.Delete(stmtId, pID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByModuleType"/></summary>
		public int DeleteByModuleType(Int16 moduleType) {
			String stmtId = "ModuleInfo.DeleteByModuleType";
			int result = SqlMapperManager.Instance.Delete(stmtId, moduleType);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByModuleName"/></summary>
		public int DeleteByModuleName(String moduleName) {
			String stmtId = "ModuleInfo.DeleteByModuleName";
			int result = SqlMapperManager.Instance.Delete(stmtId, moduleName);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByModuleUrl"/></summary>
		public int DeleteByModuleUrl(String moduleUrl) {
			String stmtId = "ModuleInfo.DeleteByModuleUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, moduleUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByDescription"/></summary>
		public int DeleteByDescription(String description) {
			String stmtId = "ModuleInfo.DeleteByDescription";
			int result = SqlMapperManager.Instance.Delete(stmtId, description);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByCreateUserID"/></summary>
		public int DeleteByCreateUserID(Int64 createUserID) {
			String stmtId = "ModuleInfo.DeleteByCreateUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteBySortID"/></summary>
		public int DeleteBySortID(Int32 sortID) {
			String stmtId = "ModuleInfo.DeleteBySortID";
			int result = SqlMapperManager.Instance.Delete(stmtId, sortID);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByStatus"/></summary>
		public int DeleteByStatus(Int16 status) {
			String stmtId = "ModuleInfo.DeleteByStatus";
			int result = SqlMapperManager.Instance.Delete(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "ModuleInfo.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IModuleInfoDao.Reload"/></summary>
		public void Reload(ModuleInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "ModuleInfo.Find";
			SqlMapperManager.Instance.QueryForObject<ModuleInfo>(stmtId, obj, obj);
		}
		
	}

}
