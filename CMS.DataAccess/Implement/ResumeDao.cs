//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>ResumeDao</c> is the implementation of <see cref="IResumeDao"/>.</summary>
    public partial class ResumeDao : BaseDAO, IResumeDao {

		/// <summary>Implements <see cref="IResumeDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "Resume.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IResumeDao.Find"/></summary>
		public Resume Find(Int64 iD) {
			String stmtId = "Resume.Find";
			Resume result = SqlMapperManager.Instance.QueryForObject<Resume>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="IResumeDao.FindAll"/></summary>
		public IList<Resume> FindAll() {
			String stmtId = "Resume.FindAll";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.QuickFindAll"/></summary>
		public IList<Resume> QuickFindAll() {
			String stmtId = "Resume.QuickFindAll";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByPositionID"/></summary>
		public IList<Resume> FindByPositionID(Int64 positionID) {
            String stmtId = "Resume.FindAllUnionByjobID";
            IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, positionID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByName"/></summary>
		public IList<Resume> FindByName(String name) {
			String stmtId = "Resume.FindByName";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByMobile"/></summary>
		public IList<Resume> FindByMobile(String mobile) {
			String stmtId = "Resume.FindByMobile";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, mobile);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByTelphone"/></summary>
		public IList<Resume> FindByTelphone(String telphone) {
			String stmtId = "Resume.FindByTelphone";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, telphone);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByText"/></summary>
		public IList<Resume> FindByText(String text) {
			String stmtId = "Resume.FindByText";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, text);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByFileID"/></summary>
		public IList<Resume> FindByFileID(Int64 fileID) {
			String stmtId = "Resume.FindByFileID";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, fileID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByCreateTime"/></summary>
		public IList<Resume> FindByCreateTime(DateTime createTime) {
			String stmtId = "Resume.FindByCreateTime";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByStatus"/></summary>
		public IList<Resume> FindByStatus(Int32 status) {
			String stmtId = "Resume.FindByStatus";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByReviewUserID"/></summary>
		public IList<Resume> FindByReviewUserID(Int64? reviewUserID) {
			String stmtId = "Resume.FindByReviewUserID";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, reviewUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.FindByReviewTime"/></summary>
		public IList<Resume> FindByReviewTime(DateTime? reviewTime) {
			String stmtId = "Resume.FindByReviewTime";
			IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, reviewTime);
			return result;
		}

        public IList<Resume> FindAllUnion()
        {
            String stmtId = "Resume.FindAllUnion";
            IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, null);
            return result;
        }

        public IList<Resume> FindAllUnionByjobID(Int64 positionID)
        {
            String stmtId = "Resume.FindAllUnionByjobID";
            IList<Resume> result = SqlMapperManager.Instance.QueryForList<Resume>(stmtId, positionID);
            return result;
        }

        public Resume FindAllDetail(Int64 ID)
        {
            String stmtId = "Resume.FindAllDetail";
            Resume result = SqlMapperManager.Instance.QueryForObject<Resume>(stmtId, ID);
            return result;
        }
		
		/// <summary>Implements <see cref="IResumeDao.Insert"/></summary>
		public void Insert(Resume obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "Resume.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IResumeDao.Update"/></summary>
		public int Update(Resume obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "Resume.Update";
			return (int)SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IResumeDao.Delete"/></summary>
		public int Delete(Resume obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "Resume.Delete";
			return (int)SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByPositionID"/></summary>
		public int DeleteByPositionID(Int64 positionID) {
			String stmtId = "Resume.DeleteByPositionID";
			int result = SqlMapperManager.Instance.Delete(stmtId, positionID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByName"/></summary>
		public int DeleteByName(String name) {
			String stmtId = "Resume.DeleteByName";
			int result = SqlMapperManager.Instance.Delete(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByMobile"/></summary>
		public int DeleteByMobile(String mobile) {
			String stmtId = "Resume.DeleteByMobile";
			int result = SqlMapperManager.Instance.Delete(stmtId, mobile);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByTelphone"/></summary>
		public int DeleteByTelphone(String telphone) {
			String stmtId = "Resume.DeleteByTelphone";
			int result = SqlMapperManager.Instance.Delete(stmtId, telphone);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByText"/></summary>
		public int DeleteByText(String text) {
			String stmtId = "Resume.DeleteByText";
			int result = SqlMapperManager.Instance.Delete(stmtId, text);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByFileID"/></summary>
		public int DeleteByFileID(Int64 fileID) {
			String stmtId = "Resume.DeleteByFileID";
			int result = SqlMapperManager.Instance.Delete(stmtId, fileID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "Resume.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByStatus"/></summary>
		public int DeleteByStatus(Int32 status) {
			String stmtId = "Resume.DeleteByStatus";
			int result = SqlMapperManager.Instance.Delete(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByReviewUserID"/></summary>
		public int DeleteByReviewUserID(Int64? reviewUserID) {
			String stmtId = "Resume.DeleteByReviewUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, reviewUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.DeleteByReviewTime"/></summary>
		public int DeleteByReviewTime(DateTime? reviewTime) {
			String stmtId = "Resume.DeleteByReviewTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, reviewTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IResumeDao.Reload"/></summary>
		public void Reload(Resume obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "Resume.Find";
			SqlMapperManager.Instance.QueryForObject<Resume>(stmtId, obj, obj);
		}
		
	}

}
