//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;
using System.Collections;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>FeedBackDao</c> is the implementation of <see cref="IFeedBackDao"/>.</summary>
    public partial class FeedBackDao : BaseDAO, IFeedBackDao {

		/// <summary>Implements <see cref="IFeedBackDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "FeedBack.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IFeedBackDao.Find"/></summary>
		public FeedBack Find(Int64 iD) {
			String stmtId = "FeedBack.Find";
			FeedBack result = SqlMapperManager.Instance.QueryForObject<FeedBack>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="IFeedBackDao.FindAll"/></summary>
		public IList<FeedBack> FindAll() {
			String stmtId = "FeedBack.FindAll";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.QuickFindAll"/></summary>
		public IList<FeedBack> QuickFindAll() {
			String stmtId = "FeedBack.QuickFindAll";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByTitile"/></summary>
		public IList<FeedBack> FindByTitile(String titile) {
			String stmtId = "FeedBack.FindByTitile";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, titile);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByMessage"/></summary>
		public IList<FeedBack> FindByMessage(String message) {
			String stmtId = "FeedBack.FindByMessage";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, message);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByUserName"/></summary>
		public IList<FeedBack> FindByUserName(String userName) {
			String stmtId = "FeedBack.FindByUserName";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, userName);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByEmail"/></summary>
		public IList<FeedBack> FindByEmail(String email) {
			String stmtId = "FeedBack.FindByEmail";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, email);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByGender"/></summary>
		public IList<FeedBack> FindByGender(String gender) {
			String stmtId = "FeedBack.FindByGender";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, gender);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByIP"/></summary>
		public IList<FeedBack> FindByIP(String iP) {
			String stmtId = "FeedBack.FindByIP";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, iP);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByCreateTime"/></summary>
		public IList<FeedBack> FindByCreateTime(DateTime createTime) {
			String stmtId = "FeedBack.FindByCreateTime";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByMessageType"/></summary>
		public IList<FeedBack> FindByMessageType(Int32 messageType) {
			String stmtId = "FeedBack.FindByMessageType";
            IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, messageType);
			return result;
		}

        /// <summary>Implements <see cref="IFeedBackDao.FindByMessageType"/></summary>
        public IList<FeedBack> FindByMTStatus(Int32 messageType, Int32 status)
        {
            String stmtId = "FeedBack.FindByMTStatus";
            FeedBack fb = new FeedBack();
            fb.MessageType = messageType;
            fb.Status = status;
            IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, fb);
            return result;
        }
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByReplyMessae"/></summary>
		public IList<FeedBack> FindByReplyMessae(String replyMessae) {
			String stmtId = "FeedBack.FindByReplyMessae";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, replyMessae);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByReplyUserID"/></summary>
		public IList<FeedBack> FindByReplyUserID(Int64 replyUserID) {
			String stmtId = "FeedBack.FindByReplyUserID";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, replyUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByReplyTime"/></summary>
		public IList<FeedBack> FindByReplyTime(DateTime replyTime) {
			String stmtId = "FeedBack.FindByReplyTime";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, replyTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.FindByStatus"/></summary>
		public IList<FeedBack> FindByStatus(Int32 status) {
			String stmtId = "FeedBack.FindByStatus";
			IList<FeedBack> result = SqlMapperManager.Instance.QueryForList<FeedBack>(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.Insert"/></summary>
		public void Insert(FeedBack obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "FeedBack.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.Update"/></summary>
		public void Update(FeedBack obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "FeedBack.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}

        public int UpdateStatus(Hashtable ht)
        {
            if (ht == null) throw new ArgumentNullException("ht");
            String stmtId = "FeedBack.UpdateStatus";
            int result=SqlMapperManager.Instance.Update(stmtId, ht);
            return result;
        }

        public int UpdateReplayContent(FeedBack obj)
        {
            if (obj == null) throw new ArgumentNullException("obj");
            String stmtId = "FeedBack.UpdateReplayContent";
            int result = SqlMapperManager.Instance.Update(stmtId, obj);
            return result;
        }

		/// <summary>Implements <see cref="IFeedBackDao.Delete"/></summary>
		public int Delete(FeedBack obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "FeedBack.Delete";
			int result=SqlMapperManager.Instance.Delete(stmtId, obj);
            return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByTitile"/></summary>
		public int DeleteByTitile(String titile) {
			String stmtId = "FeedBack.DeleteByTitile";
			int result = SqlMapperManager.Instance.Delete(stmtId, titile);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByMessage"/></summary>
		public int DeleteByMessage(String message) {
			String stmtId = "FeedBack.DeleteByMessage";
			int result = SqlMapperManager.Instance.Delete(stmtId, message);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByUserName"/></summary>
		public int DeleteByUserName(String userName) {
			String stmtId = "FeedBack.DeleteByUserName";
			int result = SqlMapperManager.Instance.Delete(stmtId, userName);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByEmail"/></summary>
		public int DeleteByEmail(String email) {
			String stmtId = "FeedBack.DeleteByEmail";
			int result = SqlMapperManager.Instance.Delete(stmtId, email);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByGender"/></summary>
		public int DeleteByGender(String gender) {
			String stmtId = "FeedBack.DeleteByGender";
			int result = SqlMapperManager.Instance.Delete(stmtId, gender);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByIP"/></summary>
		public int DeleteByIP(String iP) {
			String stmtId = "FeedBack.DeleteByIP";
			int result = SqlMapperManager.Instance.Delete(stmtId, iP);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "FeedBack.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByMessageType"/></summary>
		public int DeleteByMessageType(Int32 messageType) {
			String stmtId = "FeedBack.DeleteByMessageType";
			int result = SqlMapperManager.Instance.Delete(stmtId, messageType);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByReplyMessae"/></summary>
		public int DeleteByReplyMessae(String replyMessae) {
			String stmtId = "FeedBack.DeleteByReplyMessae";
			int result = SqlMapperManager.Instance.Delete(stmtId, replyMessae);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByReplyUserID"/></summary>
		public int DeleteByReplyUserID(Int64 replyUserID) {
			String stmtId = "FeedBack.DeleteByReplyUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, replyUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByReplyTime"/></summary>
		public int DeleteByReplyTime(DateTime replyTime) {
			String stmtId = "FeedBack.DeleteByReplyTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, replyTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.DeleteByStatus"/></summary>
		public int DeleteByStatus(Int32 status) {
			String stmtId = "FeedBack.DeleteByStatus";
			int result = SqlMapperManager.Instance.Delete(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IFeedBackDao.Reload"/></summary>
		public void Reload(FeedBack obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "FeedBack.Find";
			SqlMapperManager.Instance.QueryForObject<FeedBack>(stmtId, obj, obj);
		}
		
	}

}
