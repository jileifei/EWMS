//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>RolePrivilegeDao</c> is the implementation of <see cref="IRolePrivilegeDao"/>.</summary>
    public partial class RolePrivilegeDao : BaseDAO, IRolePrivilegeDao {

		/// <summary>Implements <see cref="IRolePrivilegeDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "RolePrivilege.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IRolePrivilegeDao.Find"/></summary>
		public RolePrivilege Find(Int64 iD) {
			String stmtId = "RolePrivilege.Find";
			RolePrivilege result = SqlMapperManager.Instance.QueryForObject<RolePrivilege>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="IRolePrivilegeDao.FindAll"/></summary>
		public IList<RolePrivilege> FindAll() {
			String stmtId = "RolePrivilege.FindAll";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.QuickFindAll"/></summary>
		public IList<RolePrivilege> QuickFindAll() {
			String stmtId = "RolePrivilege.QuickFindAll";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.FindByRoleID"/></summary>
		public IList<RolePrivilege> FindByRoleID(Int64 roleID) {
			String stmtId = "RolePrivilege.FindByRoleID";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, roleID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.FindByModuleID"/></summary>
		public IList<RolePrivilege> FindByModuleID(Int64 moduleID) {
			String stmtId = "RolePrivilege.FindByModuleID";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, moduleID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.FindByCreateTime"/></summary>
		public IList<RolePrivilege> FindByCreateTime(DateTime createTime) {
			String stmtId = "RolePrivilege.FindByCreateTime";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.FindByCreateUserID"/></summary>
		public IList<RolePrivilege> FindByCreateUserID(Int64 createUserID) {
			String stmtId = "RolePrivilege.FindByCreateUserID";
			IList<RolePrivilege> result = SqlMapperManager.Instance.QueryForList<RolePrivilege>(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.Insert"/></summary>
		public void Insert(RolePrivilege obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RolePrivilege.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.Update"/></summary>
		public void Update(RolePrivilege obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RolePrivilege.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.Delete"/></summary>
		public void Delete(RolePrivilege obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RolePrivilege.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.DeleteByRoleID"/></summary>
		public int DeleteByRoleID(Int64 roleID) {
			String stmtId = "RolePrivilege.DeleteByRoleID";
			int result = SqlMapperManager.Instance.Delete(stmtId, roleID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.DeleteByModuleID"/></summary>
		public int DeleteByModuleID(Int64 moduleID) {
			String stmtId = "RolePrivilege.DeleteByModuleID";
			int result = SqlMapperManager.Instance.Delete(stmtId, moduleID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "RolePrivilege.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.DeleteByCreateUserID"/></summary>
		public int DeleteByCreateUserID(Int64 createUserID) {
			String stmtId = "RolePrivilege.DeleteByCreateUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRolePrivilegeDao.Reload"/></summary>
		public void Reload(RolePrivilege obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RolePrivilege.Find";
			SqlMapperManager.Instance.QueryForObject<RolePrivilege>(stmtId, obj, obj);
		}
		
	}

}
