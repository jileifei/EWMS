//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>TemplateInfoDao</c> is the implementation of <see cref="ITemplateInfoDao"/>.</summary>
    public partial class TemplateInfoDao : BaseDAO, ITemplateInfoDao {

		/// <summary>Implements <see cref="ITemplateInfoDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "TemplateInfo.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="ITemplateInfoDao.Find"/></summary>
		public TemplateInfo Find(Int64 iD) {
			String stmtId = "TemplateInfo.Find";
			TemplateInfo result = SqlMapperManager.Instance.QueryForObject<TemplateInfo>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="ITemplateInfoDao.FindAll"/></summary>
		public IList<TemplateInfo> FindAll() {
			String stmtId = "TemplateInfo.FindAll";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.QuickFindAll"/></summary>
		public IList<TemplateInfo> QuickFindAll() {
			String stmtId = "TemplateInfo.QuickFindAll";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByName"/></summary>
		public IList<TemplateInfo> FindByName(String name) {
			String stmtId = "TemplateInfo.FindByName";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByType"/></summary>
		public IList<TemplateInfo> FindByType(Int32? type) {
			String stmtId = "TemplateInfo.FindByType";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, type);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByTemplateCode"/></summary>
		public IList<TemplateInfo> FindByTemplateCode(String templateCode) {
			String stmtId = "TemplateInfo.FindByTemplateCode";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, templateCode);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByCreateTime"/></summary>
		public IList<TemplateInfo> FindByCreateTime(DateTime? createTime) {
			String stmtId = "TemplateInfo.FindByCreateTime";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByCreateUserID"/></summary>
		public IList<TemplateInfo> FindByCreateUserID(Int64? createUserID) {
			String stmtId = "TemplateInfo.FindByCreateUserID";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByModifyTime"/></summary>
		public IList<TemplateInfo> FindByModifyTime(DateTime? modifyTime) {
			String stmtId = "TemplateInfo.FindByModifyTime";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, modifyTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByModifyUserID"/></summary>
		public IList<TemplateInfo> FindByModifyUserID(Int64? modifyUserID) {
			String stmtId = "TemplateInfo.FindByModifyUserID";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, modifyUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.FindByStatus"/></summary>
		public IList<TemplateInfo> FindByStatus(Int32? status) {
			String stmtId = "TemplateInfo.FindByStatus";
			IList<TemplateInfo> result = SqlMapperManager.Instance.QueryForList<TemplateInfo>(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.Insert"/></summary>
		public void Insert(TemplateInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateInfo.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.Update"/></summary>
		public void Update(TemplateInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateInfo.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.Delete"/></summary>
		public void Delete(TemplateInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateInfo.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByName"/></summary>
		public int DeleteByName(String name) {
			String stmtId = "TemplateInfo.DeleteByName";
			int result = SqlMapperManager.Instance.Delete(stmtId, name);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByType"/></summary>
		public int DeleteByType(Int32? type) {
			String stmtId = "TemplateInfo.DeleteByType";
			int result = SqlMapperManager.Instance.Delete(stmtId, type);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByTemplateCode"/></summary>
		public int DeleteByTemplateCode(String templateCode) {
			String stmtId = "TemplateInfo.DeleteByTemplateCode";
			int result = SqlMapperManager.Instance.Delete(stmtId, templateCode);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime? createTime) {
			String stmtId = "TemplateInfo.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByCreateUserID"/></summary>
		public int DeleteByCreateUserID(Int64? createUserID) {
			String stmtId = "TemplateInfo.DeleteByCreateUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByModifyTime"/></summary>
		public int DeleteByModifyTime(DateTime? modifyTime) {
			String stmtId = "TemplateInfo.DeleteByModifyTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, modifyTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByModifyUserID"/></summary>
		public int DeleteByModifyUserID(Int64? modifyUserID) {
			String stmtId = "TemplateInfo.DeleteByModifyUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, modifyUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.DeleteByStatus"/></summary>
		public int DeleteByStatus(Int32? status) {
			String stmtId = "TemplateInfo.DeleteByStatus";
			int result = SqlMapperManager.Instance.Delete(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateInfoDao.Reload"/></summary>
		public void Reload(TemplateInfo obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateInfo.Find";
			SqlMapperManager.Instance.QueryForObject<TemplateInfo>(stmtId, obj, obj);
		}
		
	}

}
