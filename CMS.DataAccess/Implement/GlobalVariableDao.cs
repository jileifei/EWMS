//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>GlobalVariableDao</c> is the implementation of <see cref="IGlobalVariableDao"/>.</summary>
    public partial class GlobalVariableDao : IGlobalVariableDao {

		/// <summary>Implements <see cref="IGlobalVariableDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "GlobalVariable.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IGlobalVariableDao.Find"/></summary>
		public GlobalVariable Find(Int64 globalID) {
			String stmtId = "GlobalVariable.Find";
			GlobalVariable result = SqlMapperManager.Instance.QueryForObject<GlobalVariable>(stmtId, globalID);
			return result;
		}

		/// <summary>Implements <see cref="IGlobalVariableDao.FindAll"/></summary>
		public IList<GlobalVariable> FindAll() {
			String stmtId = "GlobalVariable.FindAll";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.QuickFindAll"/></summary>
		public IList<GlobalVariable> QuickFindAll() {
			String stmtId = "GlobalVariable.QuickFindAll";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByGlobalName"/></summary>
		public IList<GlobalVariable> FindByGlobalName(String globalName) {
			String stmtId = "GlobalVariable.FindByGlobalName";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, globalName);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByEnName"/></summary>
		public IList<GlobalVariable> FindByEnName(String enName) {
			String stmtId = "GlobalVariable.FindByEnName";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, enName);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByContent"/></summary>
		public IList<GlobalVariable> FindByContent(String content) {
			String stmtId = "GlobalVariable.FindByContent";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, content);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByIsInclude"/></summary>
		public IList<GlobalVariable> FindByIsInclude(Boolean isInclude) {
			String stmtId = "GlobalVariable.FindByIsInclude";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, isInclude);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByAddDate"/></summary>
		public IList<GlobalVariable> FindByAddDate(DateTime addDate) {
			String stmtId = "GlobalVariable.FindByAddDate";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, addDate);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.FindByIsDeleted"/></summary>
		public IList<GlobalVariable> FindByIsDeleted(Int16 isDeleted) {
			String stmtId = "GlobalVariable.FindByIsDeleted";
			IList<GlobalVariable> result = SqlMapperManager.Instance.QueryForList<GlobalVariable>(stmtId, isDeleted);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.Insert"/></summary>
		public void Insert(GlobalVariable obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "GlobalVariable.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.Update"/></summary>
		public void Update(GlobalVariable obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "GlobalVariable.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.Delete"/></summary>
		public void Delete(GlobalVariable obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "GlobalVariable.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByGlobalName"/></summary>
		public int DeleteByGlobalName(String globalName) {
			String stmtId = "GlobalVariable.DeleteByGlobalName";
			int result = SqlMapperManager.Instance.Delete(stmtId, globalName);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByEnName"/></summary>
		public int DeleteByEnName(String enName) {
			String stmtId = "GlobalVariable.DeleteByEnName";
			int result = SqlMapperManager.Instance.Delete(stmtId, enName);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByContent"/></summary>
		public int DeleteByContent(String content) {
			String stmtId = "GlobalVariable.DeleteByContent";
			int result = SqlMapperManager.Instance.Delete(stmtId, content);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByIsInclude"/></summary>
		public int DeleteByIsInclude(Boolean isInclude) {
			String stmtId = "GlobalVariable.DeleteByIsInclude";
			int result = SqlMapperManager.Instance.Delete(stmtId, isInclude);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByAddDate"/></summary>
		public int DeleteByAddDate(DateTime addDate) {
			String stmtId = "GlobalVariable.DeleteByAddDate";
			int result = SqlMapperManager.Instance.Delete(stmtId, addDate);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.DeleteByIsDeleted"/></summary>
		public int DeleteByIsDeleted(Int16 isDeleted) {
			String stmtId = "GlobalVariable.DeleteByIsDeleted";
			int result = SqlMapperManager.Instance.Delete(stmtId, isDeleted);
			return result;
		}
		
		/// <summary>Implements <see cref="IGlobalVariableDao.Reload"/></summary>
		public void Reload(GlobalVariable obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "GlobalVariable.Find";
			SqlMapperManager.Instance.QueryForObject<GlobalVariable>(stmtId, obj, obj);
		}
		
	}

}
