//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>RecommedInfoListDao</c> is the implementation of <see cref="IRecommedInfoListDao"/>.</summary>
    public partial class RecommedInfoListDao : IRecommedInfoListDao {

		/// <summary>Implements <see cref="IRecommedInfoListDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "RecommedInfoList.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="IRecommedInfoListDao.Find"/></summary>
		public RecommedInfoList Find(Int64 iD) {
			String stmtId = "RecommedInfoList.Find";
			RecommedInfoList result = SqlMapperManager.Instance.QueryForObject<RecommedInfoList>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="IRecommedInfoListDao.FindAll"/></summary>
		public IList<RecommedInfoList> FindAll() {
			String stmtId = "RecommedInfoList.FindAll";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.QuickFindAll"/></summary>
		public IList<RecommedInfoList> QuickFindAll() {
			String stmtId = "RecommedInfoList.QuickFindAll";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByLocationID"/></summary>
		public IList<RecommedInfoList> FindByLocationID(Int64? locationID) {
			String stmtId = "RecommedInfoList.FindByLocationID";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, locationID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByDocID"/></summary>
		public IList<RecommedInfoList> FindByDocID(Int64? docID) {
			String stmtId = "RecommedInfoList.FindByDocID";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, docID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByTitle"/></summary>
		public IList<RecommedInfoList> FindByTitle(String title) {
			String stmtId = "RecommedInfoList.FindByTitle";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, title);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindBySmallPicUrl"/></summary>
		public IList<RecommedInfoList> FindBySmallPicUrl(String smallPicUrl) {
			String stmtId = "RecommedInfoList.FindBySmallPicUrl";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, smallPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByBigPicUrl"/></summary>
		public IList<RecommedInfoList> FindByBigPicUrl(String bigPicUrl) {
			String stmtId = "RecommedInfoList.FindByBigPicUrl";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, bigPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindBySummary"/></summary>
		public IList<RecommedInfoList> FindBySummary(String summary) {
			String stmtId = "RecommedInfoList.FindBySummary";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, summary);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByLinkUrl"/></summary>
		public IList<RecommedInfoList> FindByLinkUrl(String linkUrl) {
			String stmtId = "RecommedInfoList.FindByLinkUrl";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, linkUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByCreateUserID"/></summary>
		public IList<RecommedInfoList> FindByCreateUserID(Int64? createUserID) {
			String stmtId = "RecommedInfoList.FindByCreateUserID";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByCreateTime"/></summary>
		public IList<RecommedInfoList> FindByCreateTime(DateTime? createTime) {
			String stmtId = "RecommedInfoList.FindByCreateTime";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindBySortID"/></summary>
		public IList<RecommedInfoList> FindBySortID(Int32 sortID) {
			String stmtId = "RecommedInfoList.FindBySortID";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, sortID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.FindByStatus"/></summary>
		public IList<RecommedInfoList> FindByStatus(Int32 status) {
			String stmtId = "RecommedInfoList.FindByStatus";
			IList<RecommedInfoList> result = SqlMapperManager.Instance.QueryForList<RecommedInfoList>(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.Insert"/></summary>
		public void Insert(RecommedInfoList obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RecommedInfoList.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.Update"/></summary>
		public void Update(RecommedInfoList obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RecommedInfoList.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.Delete"/></summary>
		public void Delete(RecommedInfoList obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RecommedInfoList.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByLocationID"/></summary>
		public int DeleteByLocationID(Int64? locationID) {
			String stmtId = "RecommedInfoList.DeleteByLocationID";
			int result = SqlMapperManager.Instance.Delete(stmtId, locationID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByDocID"/></summary>
		public int DeleteByDocID(Int64? docID) {
			String stmtId = "RecommedInfoList.DeleteByDocID";
			int result = SqlMapperManager.Instance.Delete(stmtId, docID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByTitle"/></summary>
		public int DeleteByTitle(String title) {
			String stmtId = "RecommedInfoList.DeleteByTitle";
			int result = SqlMapperManager.Instance.Delete(stmtId, title);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteBySmallPicUrl"/></summary>
		public int DeleteBySmallPicUrl(String smallPicUrl) {
			String stmtId = "RecommedInfoList.DeleteBySmallPicUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, smallPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByBigPicUrl"/></summary>
		public int DeleteByBigPicUrl(String bigPicUrl) {
			String stmtId = "RecommedInfoList.DeleteByBigPicUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, bigPicUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteBySummary"/></summary>
		public int DeleteBySummary(String summary) {
			String stmtId = "RecommedInfoList.DeleteBySummary";
			int result = SqlMapperManager.Instance.Delete(stmtId, summary);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByLinkUrl"/></summary>
		public int DeleteByLinkUrl(String linkUrl) {
			String stmtId = "RecommedInfoList.DeleteByLinkUrl";
			int result = SqlMapperManager.Instance.Delete(stmtId, linkUrl);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByCreateUserID"/></summary>
		public int DeleteByCreateUserID(Int64? createUserID) {
			String stmtId = "RecommedInfoList.DeleteByCreateUserID";
			int result = SqlMapperManager.Instance.Delete(stmtId, createUserID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime? createTime) {
			String stmtId = "RecommedInfoList.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteBySortID"/></summary>
		public int DeleteBySortID(Int32 sortID) {
			String stmtId = "RecommedInfoList.DeleteBySortID";
			int result = SqlMapperManager.Instance.Delete(stmtId, sortID);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.DeleteByStatus"/></summary>
		public int DeleteByStatus(Int32 status) {
			String stmtId = "RecommedInfoList.DeleteByStatus";
			int result = SqlMapperManager.Instance.Delete(stmtId, status);
			return result;
		}
		
		/// <summary>Implements <see cref="IRecommedInfoListDao.Reload"/></summary>
		public void Reload(RecommedInfoList obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "RecommedInfoList.Find";
			SqlMapperManager.Instance.QueryForObject<RecommedInfoList>(stmtId, obj, obj);
		}
		
	}

}
