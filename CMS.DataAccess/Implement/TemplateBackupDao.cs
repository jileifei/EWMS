//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoImpl.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using IBatisNet.DataMapper;
using CMS.Domain;
using CMS.DataAccess.Interface;

namespace CMS.DataAccess.Implement {
	
    /// <summary><c>TemplateBackupDao</c> is the implementation of <see cref="ITemplateBackupDao"/>.</summary>
    public partial class TemplateBackupDao : BaseDAO, ITemplateBackupDao {

		/// <summary>Implements <see cref="ITemplateBackupDao.GetCount"/></summary>
		public int GetCount() {
			String stmtId = "TemplateBackup.GetCount";
			int result = SqlMapperManager.Instance.QueryForObject<int>(stmtId, null);
			return result;
		}

		/// <summary>Implements <see cref="ITemplateBackupDao.Find"/></summary>
		public TemplateBackup Find(Int64 iD) {
			String stmtId = "TemplateBackup.Find";
			TemplateBackup result = SqlMapperManager.Instance.QueryForObject<TemplateBackup>(stmtId, iD);
			return result;
		}

		/// <summary>Implements <see cref="ITemplateBackupDao.QuickFind"/></summary>
		public TemplateBackup QuickFind(Int64 iD) {
			String stmtId = "TemplateBackup.QuickFind";
			TemplateBackup result = SqlMapperManager.Instance.QueryForObject<TemplateBackup>(stmtId, iD);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.FindAll"/></summary>
		public IList<TemplateBackup> FindAll() {
			String stmtId = "TemplateBackup.FindAll";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.QuickFindAll"/></summary>
		public IList<TemplateBackup> QuickFindAll() {
			String stmtId = "TemplateBackup.QuickFindAll";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, null);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.FindByTemplateID"/></summary>
		public IList<TemplateBackup> FindByTemplateID(Int64 templateID) {
			String stmtId = "TemplateBackup.FindByTemplateID";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, templateID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.QuickFindByTemplateID"/></summary>
		public IList<TemplateBackup> QuickFindByTemplateID(Int64 templateID) {
			String stmtId = "TemplateBackup.QuickFindByTemplateID";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, templateID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.FindByCreateTime"/></summary>
		public IList<TemplateBackup> FindByCreateTime(DateTime createTime) {
			String stmtId = "TemplateBackup.FindByCreateTime";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.QuickFindByCreateTime"/></summary>
		public IList<TemplateBackup> QuickFindByCreateTime(DateTime createTime) {
			String stmtId = "TemplateBackup.QuickFindByCreateTime";
			IList<TemplateBackup> result = SqlMapperManager.Instance.QueryForList<TemplateBackup>(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.Insert"/></summary>
		public void Insert(TemplateBackup obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateBackup.Insert";
			SqlMapperManager.Instance.Insert(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.Update"/></summary>
		public void Update(TemplateBackup obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateBackup.Update";
			SqlMapperManager.Instance.Update(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.Delete"/></summary>
		public void Delete(TemplateBackup obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateBackup.Delete";
			SqlMapperManager.Instance.Delete(stmtId, obj);
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.DeleteByTemplateID"/></summary>
		public int DeleteByTemplateID(Int64 templateID) {
			String stmtId = "TemplateBackup.DeleteByTemplateID";
			int result = SqlMapperManager.Instance.Delete(stmtId, templateID);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.DeleteByCreateTime"/></summary>
		public int DeleteByCreateTime(DateTime createTime) {
			String stmtId = "TemplateBackup.DeleteByCreateTime";
			int result = SqlMapperManager.Instance.Delete(stmtId, createTime);
			return result;
		}
		
		/// <summary>Implements <see cref="ITemplateBackupDao.Reload"/></summary>
		public void Reload(TemplateBackup obj) {
			if (obj == null) throw new ArgumentNullException("obj");
			String stmtId = "TemplateBackup.Find";
			SqlMapperManager.Instance.QueryForObject<TemplateBackup>(stmtId, obj, obj);
		}
		
	}

}
