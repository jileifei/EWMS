//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>IRoleInfoDao</c> is the DAO interface for <see cref="CMS.Domain.RoleInfo"/>.</summary>
    public partial interface IRoleInfoDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="RoleInfo"/> instance by the primary key value.</summary>
		RoleInfo Find(Int64 iD);

		/// <summary>Finds all RoleInfo instances.</summary>
		IList<RoleInfo> FindAll();
		
		/// <summary>Finds all RoleInfo instances without Lob columns loaded.</summary>
		IList<RoleInfo> QuickFindAll();
		
		/// <summary>Finds RoleInfo instances by RoleName value.</summary>
		IList<RoleInfo> FindByRoleName(String roleName);
		
		/// <summary>Finds RoleInfo instances by Description value.</summary>
		IList<RoleInfo> FindByDescription(String description);
		
		/// <summary>Finds RoleInfo instances by CreateTime value.</summary>
		IList<RoleInfo> FindByCreateTime(DateTime createTime);
		
		/// <summary>Finds RoleInfo instances by IsCmsAdmin value.</summary>
		IList<RoleInfo> FindByIsCmsAdmin(Int32 isCmsAdmin);
		
		/// <summary>Finds RoleInfo instances by CreateUserID value.</summary>
		IList<RoleInfo> FindByCreateUserID(Int64 createUserID);
		
		/// <summary>Inserts a new RoleInfo instance into underlying database table.</summary>
		void Insert(RoleInfo obj);
		
		/// <summary>Update the underlying database record of a RoleInfo instance.</summary>
		void Update(RoleInfo obj);
		
		/// <summary>Delete the underlying database record of a RoleInfo instance.</summary>
		void Delete(RoleInfo obj);
		
        /// <summary>Deletes <see cref="RoleInfo"/> instances by <see cref="RoleInfo.RoleName"/>.</summary>
		int DeleteByRoleName(String roleName);
		
        /// <summary>Deletes <see cref="RoleInfo"/> instances by <see cref="RoleInfo.Description"/>.</summary>
		int DeleteByDescription(String description);
		
        /// <summary>Deletes <see cref="RoleInfo"/> instances by <see cref="RoleInfo.CreateTime"/>.</summary>
		int DeleteByCreateTime(DateTime createTime);
		
        /// <summary>Deletes <see cref="RoleInfo"/> instances by <see cref="RoleInfo.IsCmsAdmin"/>.</summary>
		int DeleteByIsCmsAdmin(Int32 isCmsAdmin);
		
        /// <summary>Deletes <see cref="RoleInfo"/> instances by <see cref="RoleInfo.CreateUserID"/>.</summary>
		int DeleteByCreateUserID(Int64 createUserID);
		
		/// <summary>Reload the underlying database record of a RoleInfo instance.</summary>
		void Reload(RoleInfo obj);
		
	}

}
