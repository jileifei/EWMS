//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>IModuleInfoDao</c> is the DAO interface for <see cref="CMS.Domain.ModuleInfo"/>.</summary>
    public partial interface IModuleInfoDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="ModuleInfo"/> instance by the primary key value.</summary>
		ModuleInfo Find(Int64 iD);

		/// <summary>Finds all ModuleInfo instances.</summary>
		IList<ModuleInfo> FindAll();
		
		/// <summary>Finds all ModuleInfo instances without Lob columns loaded.</summary>
		IList<ModuleInfo> QuickFindAll();
		
		/// <summary>Finds ModuleInfo instances by PID value.</summary>
		IList<ModuleInfo> FindByPID(Int64 pID);
		
		/// <summary>Finds ModuleInfo instances by ModuleType value.</summary>
		IList<ModuleInfo> FindByModuleType(Int16 moduleType);
		
		/// <summary>Finds ModuleInfo instances by ModuleName value.</summary>
		IList<ModuleInfo> FindByModuleName(String moduleName);
		
		/// <summary>Finds ModuleInfo instances by ModuleUrl value.</summary>
		IList<ModuleInfo> FindByModuleUrl(String moduleUrl);
		
		/// <summary>Finds ModuleInfo instances by Description value.</summary>
		IList<ModuleInfo> FindByDescription(String description);
		
		/// <summary>Finds ModuleInfo instances by CreateUserID value.</summary>
		IList<ModuleInfo> FindByCreateUserID(Int64 createUserID);
		
		/// <summary>Finds ModuleInfo instances by SortID value.</summary>
		IList<ModuleInfo> FindBySortID(Int32 sortID);
		
		/// <summary>Finds ModuleInfo instances by Status value.</summary>
		IList<ModuleInfo> FindByStatus(Int16 status);
		
		/// <summary>Finds ModuleInfo instances by CreateTime value.</summary>
		IList<ModuleInfo> FindByCreateTime(DateTime createTime);
		
		/// <summary>Inserts a new ModuleInfo instance into underlying database table.</summary>
		void Insert(ModuleInfo obj);
		
		/// <summary>Update the underlying database record of a ModuleInfo instance.</summary>
		void Update(ModuleInfo obj);
		
		/// <summary>Delete the underlying database record of a ModuleInfo instance.</summary>
		void Delete(ModuleInfo obj);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.PID"/>.</summary>
		int DeleteByPID(Int64 pID);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.ModuleType"/>.</summary>
		int DeleteByModuleType(Int16 moduleType);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.ModuleName"/>.</summary>
		int DeleteByModuleName(String moduleName);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.ModuleUrl"/>.</summary>
		int DeleteByModuleUrl(String moduleUrl);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.Description"/>.</summary>
		int DeleteByDescription(String description);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.CreateUserID"/>.</summary>
		int DeleteByCreateUserID(Int64 createUserID);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.SortID"/>.</summary>
		int DeleteBySortID(Int32 sortID);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.Status"/>.</summary>
		int DeleteByStatus(Int16 status);
		
        /// <summary>Deletes <see cref="ModuleInfo"/> instances by <see cref="ModuleInfo.CreateTime"/>.</summary>
		int DeleteByCreateTime(DateTime createTime);
		
		/// <summary>Reload the underlying database record of a ModuleInfo instance.</summary>
		void Reload(ModuleInfo obj);
		
	}

}
