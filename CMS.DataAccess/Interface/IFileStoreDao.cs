//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>IFileStoreDao</c> is the DAO interface for <see cref="CMS.Domain.FileStore"/>.</summary>
    public partial interface IFileStoreDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="FileStore"/> instance by the primary key value.</summary>
		FileStore Find(Int64 iD);

		/// <summary>Finds all FileStore instances.</summary>
		IList<FileStore> FindAll();
		
		/// <summary>Finds all FileStore instances without Lob columns loaded.</summary>
		IList<FileStore> QuickFindAll();
		
		/// <summary>Finds FileStore instances by ChannelID value.</summary>
		IList<FileStore> FindByChannelID(Int64? channelID);
		
		/// <summary>Finds FileStore instances by DocID value.</summary>
		IList<FileStore> FindByDocID(Int64? docID);
		
		/// <summary>Finds FileStore instances by ExtName value.</summary>
		IList<FileStore> FindByExtName(String extName);
		
		/// <summary>Finds FileStore instances by LocalPath value.</summary>
		IList<FileStore> FindByLocalPath(String localPath);
		
		/// <summary>Finds FileStore instances by URL value.</summary>
		IList<FileStore> FindByURL(String uRL);
		
		/// <summary>Finds FileStore instances by FileSize value.</summary>
		IList<FileStore> FindByFileSize(Int32 fileSize);
		
		/// <summary>Finds FileStore instances by Md5 value.</summary>
		IList<FileStore> FindByMd5(String md5);
		
		/// <summary>Finds FileStore instances by CreateTime value.</summary>
		IList<FileStore> FindByCreateTime(DateTime createTime);
		
		/// <summary>Finds FileStore instances by CreateUserID value.</summary>
		IList<FileStore> FindByCreateUserID(Int64 createUserID);
		
		/// <summary>Inserts a new FileStore instance into underlying database table.</summary>
		void Insert(FileStore obj);
		
		/// <summary>Update the underlying database record of a FileStore instance.</summary>
		void Update(FileStore obj);

        void Update(string publictime, string localpath);

        void UpdateLocalPath(string newPath, string oldPath, string imgurl);

		/// <summary>Delete the underlying database record of a FileStore instance.</summary>
		void Delete(FileStore obj);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.ChannelID"/>.</summary>
		int DeleteByChannelID(Int64? channelID);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.DocID"/>.</summary>
		int DeleteByDocID(Int64? docID);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.ExtName"/>.</summary>
		int DeleteByExtName(String extName);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.LocalPath"/>.</summary>
		int DeleteByLocalPath(String localPath);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.URL"/>.</summary>
		int DeleteByURL(String uRL);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.FileSize"/>.</summary>
		int DeleteByFileSize(Int32 fileSize);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.Md5"/>.</summary>
		int DeleteByMd5(String md5);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.CreateTime"/>.</summary>
		int DeleteByCreateTime(DateTime createTime);
		
        /// <summary>Deletes <see cref="FileStore"/> instances by <see cref="FileStore.CreateUserID"/>.</summary>
		int DeleteByCreateUserID(Int64 createUserID);
		
		/// <summary>Reload the underlying database record of a FileStore instance.</summary>
		void Reload(FileStore obj);
		
	}

}
