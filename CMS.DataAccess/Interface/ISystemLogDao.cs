//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>ISystemLogDao</c> is the DAO interface for <see cref="CMS.Domain.SystemLog"/>.</summary>
    public partial interface ISystemLogDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="SystemLog"/> instance by the primary key value.</summary>
		SystemLog Find(Int64 iD);

		/// <summary>Finds all SystemLog instances.</summary>
		IList<SystemLog> FindAll();
		
		/// <summary>Finds all SystemLog instances without Lob columns loaded.</summary>
		IList<SystemLog> QuickFindAll();
		
		/// <summary>Finds SystemLog instances by LogType value.</summary>
		IList<SystemLog> FindByLogType(Int32 logType);
		
		/// <summary>Finds SystemLog instances by LogLevel value.</summary>
		IList<SystemLog> FindByLogLevel(Int32 logLevel);
		
		/// <summary>Finds SystemLog instances by OperatorUserID value.</summary>
		IList<SystemLog> FindByOperatorUserID(Int64? operatorUserID);
		
		/// <summary>Finds SystemLog instances by URL value.</summary>
		IList<SystemLog> FindByURL(String uRL);
		
		/// <summary>Finds SystemLog instances by OperatorDesc value.</summary>
		IList<SystemLog> FindByOperatorDesc(String operatorDesc);
		
		/// <summary>Finds SystemLog instances by ErrorMessage value.</summary>
		IList<SystemLog> FindByErrorMessage(String errorMessage);
		
		/// <summary>Finds SystemLog instances by CreateTime value.</summary>
		IList<SystemLog> FindByCreateTime(DateTime createTime);
		
		/// <summary>Inserts a new SystemLog instance into underlying database table.</summary>
		void Insert(SystemLog obj);
		
		/// <summary>Update the underlying database record of a SystemLog instance.</summary>
		void Update(SystemLog obj);
		
		/// <summary>Delete the underlying database record of a SystemLog instance.</summary>
		void Delete(SystemLog obj);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.LogType"/>.</summary>
		int DeleteByLogType(Int32 logType);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.LogLevel"/>.</summary>
		int DeleteByLogLevel(Int32 logLevel);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.OperatorUserID"/>.</summary>
		int DeleteByOperatorUserID(Int64? operatorUserID);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.URL"/>.</summary>
		int DeleteByURL(String uRL);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.OperatorDesc"/>.</summary>
		int DeleteByOperatorDesc(String operatorDesc);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.ErrorMessage"/>.</summary>
		int DeleteByErrorMessage(String errorMessage);
		
        /// <summary>Deletes <see cref="SystemLog"/> instances by <see cref="SystemLog.CreateTime"/>.</summary>
		int DeleteByCreateTime(DateTime createTime);
		
		/// <summary>Reload the underlying database record of a SystemLog instance.</summary>
		void Reload(SystemLog obj);
		
	}

}
