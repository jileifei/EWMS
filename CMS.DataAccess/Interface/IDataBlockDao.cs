//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>IDataBlockDao</c> is the DAO interface for <see cref="CMS.Domain.DataBlock"/>.</summary>
    public partial interface IDataBlockDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="DataBlock"/> instance by the primary key value.</summary>
		DataBlock Find(Int64 iD);

		/// <summary>Finds all DataBlock instances.</summary>
		IList<DataBlock> FindAll();
		
		/// <summary>Finds all DataBlock instances without Lob columns loaded.</summary>
		IList<DataBlock> QuickFindAll();
		
		/// <summary>Finds DataBlock instances by BlockName value.</summary>
		IList<DataBlock> FindByBlockName(String blockName);
		
		/// <summary>Finds DataBlock instances by EnName value.</summary>
		IList<DataBlock> FindByEnName(String enName);
		
		/// <summary>Finds DataBlock instances by Type value.</summary>
		IList<DataBlock> FindByType(Int16 type);
		
		/// <summary>Finds DataBlock instances by RowCount value.</summary>
		IList<DataBlock> FindByRowCount(Int32 rowCount);
		
		/// <summary>Finds DataBlock instances by OrderByField value.</summary>
		IList<DataBlock> FindByOrderByField(String orderByField);
		
		/// <summary>Finds DataBlock instances by Where value.</summary>
		IList<DataBlock> FindByWhere(String where);
		
		/// <summary>Finds DataBlock instances by Status value.</summary>
		IList<DataBlock> FindByStatus(Int16 status);
		
		/// <summary>Finds DataBlock instances by TemplateID value.</summary>
		IList<DataBlock> FindByTemplateID(Int64 templateID);
		
		/// <summary>Finds DataBlock instances by Note value.</summary>
		IList<DataBlock> FindByNote(String note);
		
		/// <summary>Finds DataBlock instances by AddDate value.</summary>
		IList<DataBlock> FindByAddDate(DateTime addDate);
		
		/// <summary>Inserts a new DataBlock instance into underlying database table.</summary>
        Int64 Insert(DataBlock obj);
		
		/// <summary>Update the underlying database record of a DataBlock instance.</summary>
		void Update(DataBlock obj);
		
		/// <summary>Delete the underlying database record of a DataBlock instance.</summary>
		void Delete(DataBlock obj);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.BlockName"/>.</summary>
		int DeleteByBlockName(String blockName);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.EnName"/>.</summary>
		int DeleteByEnName(String enName);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.Type"/>.</summary>
		int DeleteByType(Int16 type);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.RowCount"/>.</summary>
		int DeleteByRowCount(Int32 rowCount);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.OrderByField"/>.</summary>
		int DeleteByOrderByField(String orderByField);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.Where"/>.</summary>
		int DeleteByWhere(String where);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.Status"/>.</summary>
		int DeleteByStatus(Int16 status);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.TemplateID"/>.</summary>
		int DeleteByTemplateID(Int64 templateID);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.Note"/>.</summary>
		int DeleteByNote(String note);
		
        /// <summary>Deletes <see cref="DataBlock"/> instances by <see cref="DataBlock.AddDate"/>.</summary>
		int DeleteByAddDate(DateTime addDate);
		
		/// <summary>Reload the underlying database record of a DataBlock instance.</summary>
		void Reload(DataBlock obj);
		
	}

}
