//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.DaoIntf.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;

using CMS.Domain;

namespace CMS.DataAccess.Interface {
	
    /// <summary><c>IJobInfoDao</c> is the DAO interface for <see cref="CMS.Domain.JobInfo"/>.</summary>
    public partial interface IJobInfoDao {        

		/// <summary>Returns the total count of objects.</summary>
		int GetCount();

		/// <summary>Finds a <see cref="JobInfo"/> instance by the primary key value.</summary>
		JobInfo Find(Int32 iD);

		/// <summary>Finds all JobInfo instances.</summary>
		IList<JobInfo> FindAll();
		
		/// <summary>Finds all JobInfo instances without Lob columns loaded.</summary>
		IList<JobInfo> QuickFindAll();
		
		/// <summary>Finds JobInfo instances by JobTypeID value.</summary>
		IList<JobInfo> FindByJobTypeID(Int64 jobTypeID);
		
		/// <summary>Finds JobInfo instances by Name value.</summary>
		IList<JobInfo> FindByName(String name);
		
		/// <summary>Finds JobInfo instances by EmployeeNumber value.</summary>
		IList<JobInfo> FindByEmployeeNumber(Int32 employeeNumber);
		
		/// <summary>Finds JobInfo instances by JobDescription value.</summary>
		IList<JobInfo> FindByJobDescription(String jobDescription);
		
		/// <summary>Finds JobInfo instances by Responsbility value.</summary>
		IList<JobInfo> FindByResponsbility(String responsbility);
		
		/// <summary>Finds JobInfo instances by Sort value.</summary>
		IList<JobInfo> FindBySort(Int32 sort);
		
		/// <summary>Finds JobInfo instances by Status value.</summary>
		IList<JobInfo> FindByStatus(Int32 status);
		
		/// <summary>Finds JobInfo instances by Publicdate value.</summary>
		IList<JobInfo> FindByPublicdate(DateTime publicdate);
		
		/// <summary>Inserts a new JobInfo instance into underlying database table.</summary>
		void Insert(JobInfo obj);
		
		/// <summary>Update the underlying database record of a JobInfo instance.</summary>
		int Update(JobInfo obj);
		
		/// <summary>Delete the underlying database record of a JobInfo instance.</summary>
		int Delete(Int64 id);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.JobTypeID"/>.</summary>
		int DeleteByJobTypeID(Int64 jobTypeID);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.Name"/>.</summary>
		int DeleteByName(String name);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.EmployeeNumber"/>.</summary>
		int DeleteByEmployeeNumber(Int32 employeeNumber);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.JobDescription"/>.</summary>
		int DeleteByJobDescription(String jobDescription);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.Responsbility"/>.</summary>
		int DeleteByResponsbility(String responsbility);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.Sort"/>.</summary>
		int DeleteBySort(Int32 sort);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.Status"/>.</summary>
		int DeleteByStatus(Int32 status);
		
        /// <summary>Deletes <see cref="JobInfo"/> instances by <see cref="JobInfo.Publicdate"/>.</summary>
		int DeleteByPublicdate(DateTime publicdate);
		
		/// <summary>Reload the underlying database record of a JobInfo instance.</summary>
		void Reload(JobInfo obj);
		
	}

}
