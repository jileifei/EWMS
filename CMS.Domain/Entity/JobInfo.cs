//==============================================================================
//	CAUTION: This file is generated by IBatisNetGen.Entity.cst at 2011/9/14 21:40:03
//				Any manual editing will be lost in re-generation.
//==============================================================================
using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace CMS.Domain {
	
    /// <summary><c>JobInfo</c> Business Object.</summary>
    [Serializable]
    public partial class JobInfo {

        public JobInfo()
        {
            m_enddate = DateTime.Now;
         }
        #region ID

        private Int64 m_iD;
		
		/// <summary>Gets or sets ID</summary>
        public Int64 ID {
        	get { return m_iD; }
        	set { m_iD = value;}        
        }
		
	    #endregion
		
        #region JobTypeID

        private Int64 m_jobTypeID;
		
		/// <summary>Gets or sets JobTypeID</summary>
        public Int64 JobTypeID {
        	get { return m_jobTypeID; }
        	set { m_jobTypeID = value;}        
        }
		
	    #endregion

        #region Name

        private String m_name;

        [DisplayName("名称")]
        [Required(ErrorMessage = "职位名称不能为空")]
        [StringLength(30, ErrorMessage = "职位名称不能超过30个字符")]	
        public String Name {
        	get { return m_name; }
        	set { m_name = value;}        
        }
		
	    #endregion

        #region Place

        private String m_place;

        [DisplayName("地点")]
        [Required(ErrorMessage = "地点不能为空")]
        public String Place
        {
            get { return m_place; }
            set { m_place = value; }
        }

        #endregion

        #region EmployeeNumber

        private Int32? m_employeeNumber;
		
		[DisplayName("人数")]
        [Required(ErrorMessage="人数不能为空")]
        [RegularExpression("^[1-9]*$",ErrorMessage="请输入数字")]
        public Int32? EmployeeNumber {
        	get { return m_employeeNumber; }
        	set { m_employeeNumber = value;}        
        }
		
	    #endregion
		
        #region JobDescription

        private String m_jobDescription;

        [DisplayName("职位要求")]
        [Required(ErrorMessage = "职位要求不能为空")]
        [StringLength(1000, ErrorMessage = "职位名称不能超过1000个字符")]	
        public String JobDescription {
        	get { return m_jobDescription; }
        	set { m_jobDescription = value;}        
        }
		
	    #endregion
		
        #region Responsbility

        private String m_responsbility;

        [DisplayName("岗位职责")]
        [Required(ErrorMessage = "岗位职责不能为空")]
        [StringLength(1000, ErrorMessage = "岗位职责不能超过1000个字符")]
        public String Responsbility {
        	get { return m_responsbility; }
        	set { m_responsbility = value;}        
        }
		
	    #endregion
		
        #region Sort

        private Int32 m_sort;
		
		/// <summary>Gets or sets Sort</summary>
        public Int32 Sort {
        	get { return m_sort; }
        	set { m_sort = value;}        
        }
		
	    #endregion
		
        #region Status

        private Int32 m_status;
		
		/// <summary>Gets or sets Status</summary>
        public Int32 Status {
        	get { return m_status; }
        	set { m_status = value;}        
        }
		
	    #endregion
		
        #region Publicdate

        private DateTime m_publicdate;
		
		/// <summary>Gets or sets Publicdate</summary>
        public DateTime Publicdate {
        	get { return m_publicdate; }
        	set { m_publicdate = value;}        
        }
		
	    #endregion

        #region EndDate

        private DateTime m_enddate;

        /// <summary>Gets or sets Publicdate</summary>
        //[DataType(DataType.Date)] 
        public DateTime EndDate
        {
            get { return m_enddate; }
            set { m_enddate = value; }
        }

        #endregion

        #region ChiefMail

        private String m_chiefMail;

        /// <summary>Gets or sets Publicdate</summary>
        [DisplayName("负责人")]
        [Required(ErrorMessage = "负责人Email不能为空")]
        [StringLength(1000, ErrorMessage = "负责人Email不能超过1000个字符")]
        public String ChiefMail
        {
            get { return m_chiefMail; }
            set { m_chiefMail = value; }
        }

        #endregion

        public Int32 RCount
        {
            get;
            set;
        }


		

	}
	
}
